name: Build and Push latest image

on:
  push:
    # build and push anytime commits are merged to devel
    branches:
      - devel

jobs:
  build_and_push_latest:
    runs-on: ubuntu-latest
    name: Build and push latest tag from devel and on new commits
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install tox
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install "tox<4.0.0" build

      - name: Check for outdated packages
        id: vars
        run: |
          echo TMPDIR=$(mktemp -d) >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            daveshow/ansible-runner
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Prepare runner test container
        run: |
          cp test/integration/Dockerfile $TMPDIR
          pyproject-build -w -o $TMPDIR
        env:
          TMPDIR: ${{ steps.vars.outputs.TMPDIR }}

      - name: Prepare runner test container
        id: builds
        run: |
          pushd $TMPDIR
          echo WHEELS=$(ls -1 ansible_runner*.whl) >> $GITHUB_OUTPUT
        env:
          TMPDIR: ${{ steps.vars.outputs.TMPDIR }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ steps.vars.outputs.TMPDIR }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: WHEEL=${{ steps.builds.outputs.WHEELS }}